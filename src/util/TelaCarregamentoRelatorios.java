/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package util;

import java.awt.Dimension;
import static java.lang.Thread.sleep;
import javax.swing.ImageIcon;
import telas.TelaSistema;

/**
 *
 * @author leand
 */
public class TelaCarregamentoRelatorios extends javax.swing.JInternalFrame {

    public static TelaCarregamentoRelatorios tela;
    
    //Instanciamento da Thread que executa a barra de carregamento, que é chamada nas telas dos relatórios
    public Thread threadCarregamento = new Thread() {
        public void run() {
            //Estrutura de repetição FOR que indica a porcentagem de carregamento
            for (int i = 0; i < 101; i++) {
                try {
                    //Cada vez que a Thread passa entra no FOR de 0 a 101 ela fica "parada" por 0,01 segundo, indicando o tempo
                    //de carregamento do relatório
                    sleep(10);
                    rSProgressBar1.setValue(i);
                    if (rSProgressBar1.getValue() <= 1) {
                        jLabelCarregamento.setText("Carregando relatório...");
                    } else if (rSProgressBar1.getValue() == 100) {
                        jLabelCarregamento.setText("Relatório carregado!");
                    }
                } catch (InterruptedException ie) {

                }
            }
        }
    };

    /**
     * Creates new form NewJInternalFrame
     */
    public TelaCarregamentoRelatorios() {
        initComponents();
        setFrameIcon(new ImageIcon(this.getClass().getResource("/icones/sand-clock.png")));
        centralizaTela();

    }
        public void centralizaTela() { //método chamado dentro do construtor de todas as telas, pois se chamado no construtor da TelaCadastro a tela não fica no completamente no meio
        Dimension tamanhoTela = getSize();
        Dimension tamanhoJDesktopPane = TelaSistema.jdp.getSize();
        int x = (tamanhoJDesktopPane.width - tamanhoTela.width) / 2;
        int y = (tamanhoJDesktopPane.height - tamanhoTela.height) / 4; //se quiser deixar totalmente no meio da tela basta dividir por 2 em vez de 20. 20 é utilizado para deixar a 
        setLocation(x, y);                                              //tela um pouco mais para cima
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabelCarregamento = new javax.swing.JLabel();
        rSProgressBar1 = new rojerusan.componentes.RSProgressBar();

        setTitle("Carregamento");

        jLabelCarregamento.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabelCarregamento.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelCarregamento.setText("jLabel1");

        rSProgressBar1.setBorder(null);
        rSProgressBar1.setFont(new java.awt.Font("Roboto Bold", 1, 14)); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabelCarregamento, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(rSProgressBar1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(22, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addComponent(jLabelCarregamento)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(rSProgressBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(32, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabelCarregamento;
    private rojerusan.componentes.RSProgressBar rSProgressBar1;
    // End of variables declaration//GEN-END:variables
}
